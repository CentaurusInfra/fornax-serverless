{
    "swagger": "2.0",
    "info": {
        "title": "FornaxCore",
        "version": "centaurusinfra.io/fornax-serverless/pkg/apis/core/v1"
    },
    "paths": {
        "/apis/": {
            "get": {
                "description": "get available API versions",
                "consumes": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "apis"
                ],
                "operationId": "getAPIVersions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList"
                        }
                    }
                }
            }
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/": {
            "get": {
                "description": "get information of a group",
                "consumes": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo"
                ],
                "operationId": "getCoreFornaxServerlessCentaurusinfraIoAPIGroup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
                        }
                    }
                }
            }
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/": {
            "get": {
                "description": "get available resources",
                "consumes": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "getCoreFornaxServerlessCentaurusinfraIoV1APIResources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
                        }
                    }
                }
            }
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/applications": {
            "get": {
                "description": "list or watch objects of kind Application",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "listCoreFornaxServerlessCentaurusinfraIoV1ApplicationForAllNamespaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationList"
                        }
                    }
                },
                "x-kubernetes-action": "list",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "name": "allowWatchBookmarks",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "name": "continue",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "name": "fieldSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "name": "labelSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "name": "limit",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersion",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersionMatch",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "name": "timeoutSeconds",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "name": "watch",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/applicationsessions": {
            "get": {
                "description": "list or watch objects of kind ApplicationSession",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "listCoreFornaxServerlessCentaurusinfraIoV1ApplicationSessionForAllNamespaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSessionList"
                        }
                    }
                },
                "x-kubernetes-action": "list",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "name": "allowWatchBookmarks",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "name": "continue",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "name": "fieldSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "name": "labelSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "name": "limit",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersion",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersionMatch",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "name": "timeoutSeconds",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "name": "watch",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/namespaces/{namespace}/applications": {
            "get": {
                "description": "list or watch objects of kind Application",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "listCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplication",
                "parameters": [
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                        "name": "allowWatchBookmarks",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "name": "continue",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "name": "fieldSelector",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "name": "labelSelector",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "name": "resourceVersion",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "name": "resourceVersionMatch",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "name": "timeoutSeconds",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "name": "watch",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationList"
                        }
                    }
                },
                "x-kubernetes-action": "list",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "post": {
                "description": "create an Application",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "createCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplication",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "name": "fieldManager",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    }
                },
                "x-kubernetes-action": "post",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "delete": {
                "description": "delete collection of Application",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "deleteCoreFornaxServerlessCentaurusinfraIoV1CollectionNamespacedApplication",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "name": "continue",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "name": "fieldSelector",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "name": "gracePeriodSeconds",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "name": "labelSelector",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "name": "orphanDependents",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "name": "propagationPolicy",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "name": "resourceVersion",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "name": "resourceVersionMatch",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "name": "timeoutSeconds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    }
                },
                "x-kubernetes-action": "deletecollection",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "object name and auth scope, such as for teams and projects",
                    "name": "namespace",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/namespaces/{namespace}/applications/{name}": {
            "get": {
                "description": "read the specified Application",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "readCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplication",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    }
                },
                "x-kubernetes-action": "get",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "put": {
                "description": "replace the specified Application",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "replaceCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplication",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "name": "fieldManager",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    }
                },
                "x-kubernetes-action": "put",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "delete": {
                "description": "delete an Application",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "deleteCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplication",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "name": "gracePeriodSeconds",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "name": "orphanDependents",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "name": "propagationPolicy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    }
                },
                "x-kubernetes-action": "delete",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "patch": {
                "description": "partially update the specified Application",
                "consumes": [
                    "application/json-patch+json",
                    "application/merge-patch+json",
                    "application/strategic-merge-patch+json",
                    "application/apply-patch+yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "patchCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplication",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
                        "name": "fieldManager",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    }
                },
                "x-kubernetes-action": "patch",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "name of the Application",
                    "name": "name",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "object name and auth scope, such as for teams and projects",
                    "name": "namespace",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/namespaces/{namespace}/applications/{name}/status": {
            "get": {
                "description": "read status of the specified Application",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "readCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    }
                },
                "x-kubernetes-action": "get",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "put": {
                "description": "replace status of the specified Application",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "replaceCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationStatus",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "name": "fieldManager",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    }
                },
                "x-kubernetes-action": "put",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "patch": {
                "description": "partially update status of the specified Application",
                "consumes": [
                    "application/json-patch+json",
                    "application/merge-patch+json",
                    "application/strategic-merge-patch+json",
                    "application/apply-patch+yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "patchCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationStatus",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
                        "name": "fieldManager",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                        }
                    }
                },
                "x-kubernetes-action": "patch",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "name of the Application",
                    "name": "name",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "object name and auth scope, such as for teams and projects",
                    "name": "namespace",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/namespaces/{namespace}/applicationsessions": {
            "get": {
                "description": "list or watch objects of kind ApplicationSession",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "listCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSession",
                "parameters": [
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                        "name": "allowWatchBookmarks",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "name": "continue",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "name": "fieldSelector",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "name": "labelSelector",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "name": "resourceVersion",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "name": "resourceVersionMatch",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "name": "timeoutSeconds",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "name": "watch",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSessionList"
                        }
                    }
                },
                "x-kubernetes-action": "list",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "post": {
                "description": "create an ApplicationSession",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "createCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSession",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "name": "fieldManager",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    }
                },
                "x-kubernetes-action": "post",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "delete": {
                "description": "delete collection of ApplicationSession",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "deleteCoreFornaxServerlessCentaurusinfraIoV1CollectionNamespacedApplicationSession",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "name": "continue",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "name": "fieldSelector",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "name": "gracePeriodSeconds",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "name": "labelSelector",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "name": "orphanDependents",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "name": "propagationPolicy",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "name": "resourceVersion",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "name": "resourceVersionMatch",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "name": "timeoutSeconds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    }
                },
                "x-kubernetes-action": "deletecollection",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "object name and auth scope, such as for teams and projects",
                    "name": "namespace",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/namespaces/{namespace}/applicationsessions/{name}": {
            "get": {
                "description": "read the specified ApplicationSession",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "readCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSession",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    }
                },
                "x-kubernetes-action": "get",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "put": {
                "description": "replace the specified ApplicationSession",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "replaceCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSession",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "name": "fieldManager",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    }
                },
                "x-kubernetes-action": "put",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "delete": {
                "description": "delete an ApplicationSession",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "deleteCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSession",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "integer",
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "name": "gracePeriodSeconds",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "name": "orphanDependents",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "name": "propagationPolicy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                        }
                    }
                },
                "x-kubernetes-action": "delete",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "patch": {
                "description": "partially update the specified ApplicationSession",
                "consumes": [
                    "application/json-patch+json",
                    "application/merge-patch+json",
                    "application/strategic-merge-patch+json",
                    "application/apply-patch+yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "patchCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSession",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
                        "name": "fieldManager",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    }
                },
                "x-kubernetes-action": "patch",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "name of the ApplicationSession",
                    "name": "name",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "object name and auth scope, such as for teams and projects",
                    "name": "namespace",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/namespaces/{namespace}/applicationsessions/{name}/status": {
            "get": {
                "description": "read status of the specified ApplicationSession",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "readCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSessionStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    }
                },
                "x-kubernetes-action": "get",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "put": {
                "description": "replace status of the specified ApplicationSession",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "replaceCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSessionStatus",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "name": "fieldManager",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    }
                },
                "x-kubernetes-action": "put",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "patch": {
                "description": "partially update status of the specified ApplicationSession",
                "consumes": [
                    "application/json-patch+json",
                    "application/merge-patch+json",
                    "application/strategic-merge-patch+json",
                    "application/apply-patch+yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "patchCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSessionStatus",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                        }
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "name": "dryRun",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
                        "name": "fieldManager",
                        "in": "query"
                    },
                    {
                        "uniqueItems": true,
                        "type": "boolean",
                        "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                        }
                    }
                },
                "x-kubernetes-action": "patch",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "name of the ApplicationSession",
                    "name": "name",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "object name and auth scope, such as for teams and projects",
                    "name": "namespace",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/watch/applications": {
            "get": {
                "description": "watch individual changes to a list of Application. deprecated: use the 'watch' parameter with a list operation instead.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "watchCoreFornaxServerlessCentaurusinfraIoV1ApplicationListForAllNamespaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    }
                },
                "x-kubernetes-action": "watchlist",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "name": "allowWatchBookmarks",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "name": "continue",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "name": "fieldSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "name": "labelSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "name": "limit",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersion",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersionMatch",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "name": "timeoutSeconds",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "name": "watch",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/watch/applicationsessions": {
            "get": {
                "description": "watch individual changes to a list of ApplicationSession. deprecated: use the 'watch' parameter with a list operation instead.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "watchCoreFornaxServerlessCentaurusinfraIoV1ApplicationSessionListForAllNamespaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    }
                },
                "x-kubernetes-action": "watchlist",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "name": "allowWatchBookmarks",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "name": "continue",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "name": "fieldSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "name": "labelSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "name": "limit",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersion",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersionMatch",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "name": "timeoutSeconds",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "name": "watch",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/watch/namespaces/{namespace}/applications": {
            "get": {
                "description": "watch individual changes to a list of Application. deprecated: use the 'watch' parameter with a list operation instead.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "watchCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    }
                },
                "x-kubernetes-action": "watchlist",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "name": "allowWatchBookmarks",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "name": "continue",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "name": "fieldSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "name": "labelSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "name": "limit",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "object name and auth scope, such as for teams and projects",
                    "name": "namespace",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersion",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersionMatch",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "name": "timeoutSeconds",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "name": "watch",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/watch/namespaces/{namespace}/applications/{name}": {
            "get": {
                "description": "watch changes to an object of kind Application. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "watchCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplication",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    }
                },
                "x-kubernetes-action": "watch",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "Application"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "name": "allowWatchBookmarks",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "name": "continue",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "name": "fieldSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "name": "labelSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "name": "limit",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "name of the Application",
                    "name": "name",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "object name and auth scope, such as for teams and projects",
                    "name": "namespace",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersion",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersionMatch",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "name": "timeoutSeconds",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "name": "watch",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/watch/namespaces/{namespace}/applicationsessions": {
            "get": {
                "description": "watch individual changes to a list of ApplicationSession. deprecated: use the 'watch' parameter with a list operation instead.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "watchCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSessionList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    }
                },
                "x-kubernetes-action": "watchlist",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "name": "allowWatchBookmarks",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "name": "continue",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "name": "fieldSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "name": "labelSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "name": "limit",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "object name and auth scope, such as for teams and projects",
                    "name": "namespace",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersion",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersionMatch",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "name": "timeoutSeconds",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "name": "watch",
                    "in": "query"
                }
            ]
        },
        "/apis/core.fornax-serverless.centaurusinfra.io/v1/watch/namespaces/{namespace}/applicationsessions/{name}": {
            "get": {
                "description": "watch changes to an object of kind ApplicationSession. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "coreFornaxServerlessCentaurusinfraIo_v1"
                ],
                "operationId": "watchCoreFornaxServerlessCentaurusinfraIoV1NamespacedApplicationSession",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
                        }
                    }
                },
                "x-kubernetes-action": "watch",
                "x-kubernetes-group-version-kind": {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "version": "v1",
                    "kind": "ApplicationSession"
                }
            },
            "parameters": [
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "name": "allowWatchBookmarks",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "name": "continue",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "name": "fieldSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "name": "labelSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "name": "limit",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "name of the ApplicationSession",
                    "name": "name",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "object name and auth scope, such as for teams and projects",
                    "name": "namespace",
                    "in": "path",
                    "required": true
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersion",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "name": "resourceVersionMatch",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "name": "timeoutSeconds",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "name": "watch",
                    "in": "query"
                }
            ]
        },
        "/version/": {
            "get": {
                "description": "get the code version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "version"
                ],
                "operationId": "getCodeVersion",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.apimachinery.pkg.version.Info"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.AccessEndPoint": {
            "type": "object",
            "properties": {
                "ipAddress": {
                    "description": "IPaddress",
                    "type": "string"
                },
                "port": {
                    "description": "Port",
                    "type": "integer",
                    "format": "int32"
                },
                "protocol": {
                    "description": "TCP/UDP",
                    "type": "string"
                }
            }
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application": {
            "description": "Application",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSpec"
                },
                "status": {
                    "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationStatus"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "kind": "Application",
                    "version": "v1"
                }
            ]
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationList": {
            "description": "ApplicationList",
            "type": "object",
            "required": [
                "items"
            ],
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.Application"
                    }
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "kind": "ApplicationList",
                    "version": "v1"
                }
            ]
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession": {
            "description": "ApplicationSession",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSessionSpec"
                },
                "status": {
                    "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSessionStatus"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "kind": "ApplicationSession",
                    "version": "v1"
                }
            ]
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSessionList": {
            "description": "ApplicationSessionList",
            "type": "object",
            "required": [
                "items"
            ],
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSession"
                    }
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "kind": "ApplicationSessionList",
                    "version": "v1"
                }
            ]
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSessionSpec": {
            "description": "ApplicationSessionSpec defines the desired state of ApplicationSession",
            "type": "object",
            "properties": {
                "applicationName": {
                    "description": "ApplicationName, client provided application",
                    "type": "string"
                },
                "closeGracePeriodSeconds": {
                    "description": "how long to wait for before close session, default 60",
                    "type": "integer",
                    "format": "int32"
                },
                "killInstanceWhenSessionClosed": {
                    "description": "if a application instance evacuated all session, kill it, default true",
                    "type": "boolean"
                },
                "openTimeoutSeconds": {
                    "description": "how long to wait for session status from Starting to Available",
                    "type": "integer",
                    "format": "int32"
                },
                "sessionData": {
                    "description": "Session data is a base64 string pass through into application instances when session started",
                    "type": "string"
                }
            }
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSessionStatus": {
            "description": "ApplicationSessionStatus defines the observed state of ApplicationSession",
            "type": "object",
            "properties": {
                "accessEndPoints": {
                    "description": "Endpoint this session is using",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.AccessEndPoint"
                    },
                    "x-kubernetes-list-type": "atomic"
                },
                "availableTime": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                },
                "availableTimeMicro": {
                    "type": "integer",
                    "format": "int64"
                },
                "clientSessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                    },
                    "x-kubernetes-list-type": "set"
                },
                "closeTime": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                },
                "sessionStatus": {
                    "description": "Session status, is Starting, Available or Closed.\n\nPossible enum values:\n - `\"\"` session is not allocated yet\n - `\"Available\"` session is started on instance, not used yet\n - `\"Closed\"` session is closed on instance\n - `\"Closing\"` session is closing on instance, wait for session client exit\n - `\"InUse\"` session is started on instance, session is being used\n - `\"Pending\"` session is not allocated yet\n - `\"Starting\"` session is send to instance, waiting for instance report session state\n - `\"Timeout\"` session is dead, no heartbeat, should close and start a new one",
                    "type": "string",
                    "enum": [
                        "",
                        "Available",
                        "Closed",
                        "Closing",
                        "InUse",
                        "Pending",
                        "Starting",
                        "Timeout"
                    ]
                }
            }
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationSpec": {
            "description": "ApplicationSpec defines the desired state of Application",
            "type": "object",
            "properties": {
                "configData": {
                    "description": "Data contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 base64 string of byte sequences",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "containers": {
                    "description": "runtime image and resource requirement of a application container",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.Container"
                    },
                    "x-kubernetes-list-type": "atomic"
                },
                "scalingPolicy": {
                    "description": "application scaling policy",
                    "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ScalingPolicy"
                },
                "usingNodeSessionService": {
                    "description": "container will use grpc session service on node agent to start application session",
                    "type": "boolean"
                }
            }
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ApplicationStatus": {
            "description": "ApplicationStatus defines the observed state of Application",
            "type": "object",
            "properties": {
                "allocatedInstances": {
                    "description": "Total number of instances which have been started by node",
                    "type": "integer",
                    "format": "int32"
                },
                "deletingInstances": {
                    "description": "Total number of instances pending delete and cleanup",
                    "type": "integer",
                    "format": "int32"
                },
                "desiredInstances": {
                    "description": "Total number of non-terminated pods targeted",
                    "type": "integer",
                    "format": "int32"
                },
                "history": {
                    "description": "Represents the latest available observations of a deployment's current state.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.DeploymentHistory"
                    },
                    "x-kubernetes-list-type": "set",
                    "x-kubernetes-patch-merge-key": "updateTime",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "idleInstances": {
                    "description": "Total number of pods which do not have session on it",
                    "type": "integer",
                    "format": "int32"
                },
                "latestHistory": {
                    "description": "The latest deploy history of this app.",
                    "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.DeploymentHistory"
                },
                "pendingInstances": {
                    "description": "Total number of instances pending schedule and implement",
                    "type": "integer",
                    "format": "int32"
                },
                "totalInstances": {
                    "description": "Total number of available instances, including pod not scheduled yet",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.DeploymentHistory": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "Type of deployment condition.",
                    "type": "string"
                },
                "deploymentStatus": {
                    "type": "string"
                },
                "message": {
                    "description": "A human readable message indicating details about the transition.",
                    "type": "string"
                },
                "reason": {
                    "description": "The reason for the last transition.",
                    "type": "string"
                },
                "updateTime": {
                    "description": "The last time this deployment was updated.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                }
            }
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.IdelSessionNumThreshold": {
            "description": "high watermark should > low watermark, if both are 0, then no auto scaling for idle buffer, application instance are created on demand when there is no instance to hold a comming session",
            "type": "object",
            "properties": {
                "high": {
                    "description": "scaling down when idle session more than this number",
                    "type": "integer",
                    "format": "int64"
                },
                "low": {
                    "description": "scaling up when idle session less than this number",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.IdelSessionPercentThreshold": {
            "description": "high watermark should > low watermark, if both are 0, then no auto scaling for idle buffer, application instance are created on demand when there is no instance to hold a comming session",
            "type": "object",
            "properties": {
                "high": {
                    "description": "scaling down when idle session percent more than this number",
                    "type": "integer",
                    "format": "int64"
                },
                "low": {
                    "description": "scaling up when idle session percent less than this number",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.ScalingPolicy": {
            "type": "object",
            "properties": {
                "burst": {
                    "type": "integer",
                    "format": "int64"
                },
                "idleSessionNumThreshold": {
                    "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.IdelSessionNumThreshold"
                },
                "idleSessionPercentThreshold": {
                    "$ref": "#/definitions/io.centaurusinfra.fornax-serverless.pkg.apis.core.v1.IdelSessionPercentThreshold"
                },
                "maximumInstance": {
                    "type": "integer",
                    "format": "int64"
                },
                "minimumInstance": {
                    "type": "integer",
                    "format": "int64"
                },
                "scalingPolicyType": {
                    "description": "what session scaling policy to use, absolute num or percent",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.Capabilities": {
            "description": "Adds and removes POSIX capabilities from running containers.",
            "type": "object",
            "properties": {
                "add": {
                    "description": "Added capabilities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "drop": {
                    "description": "Removed capabilities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "io.k8s.api.core.v1.ConfigMapEnvSource": {
            "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the ConfigMap must be defined",
                    "type": "boolean"
                }
            }
        },
        "io.k8s.api.core.v1.ConfigMapKeySelector": {
            "description": "Selects a key from a ConfigMap.",
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "description": "The key to select.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the ConfigMap or its key must be defined",
                    "type": "boolean"
                }
            },
            "x-kubernetes-map-type": "atomic"
        },
        "io.k8s.api.core.v1.Container": {
            "description": "A single application container that you want to run within a pod.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "args": {
                    "description": "Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "command": {
                    "description": "Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "env": {
                    "description": "List of environment variables to set in the container. Cannot be updated.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
                    },
                    "x-kubernetes-patch-merge-key": "name",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "envFrom": {
                    "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
                    }
                },
                "image": {
                    "description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
                    "type": "string"
                },
                "imagePullPolicy": {
                    "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\nPossible enum values:\n - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.\n - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.\n - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present",
                    "type": "string",
                    "enum": [
                        "Always",
                        "IfNotPresent",
                        "Never"
                    ]
                },
                "lifecycle": {
                    "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
                },
                "livenessProbe": {
                    "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
                },
                "name": {
                    "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                    "type": "string"
                },
                "ports": {
                    "description": "List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
                    },
                    "x-kubernetes-list-map-keys": [
                        "containerPort",
                        "protocol"
                    ],
                    "x-kubernetes-list-type": "map",
                    "x-kubernetes-patch-merge-key": "containerPort",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "readinessProbe": {
                    "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
                },
                "resources": {
                    "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
                },
                "securityContext": {
                    "description": "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                    "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
                },
                "startupProbe": {
                    "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
                },
                "stdin": {
                    "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
                    "type": "boolean"
                },
                "stdinOnce": {
                    "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
                    "type": "boolean"
                },
                "terminationMessagePath": {
                    "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
                    "type": "string"
                },
                "terminationMessagePolicy": {
                    "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.\n\nPossible enum values:\n - `\"FallbackToLogsOnError\"` will read the most recent contents of the container logs for the container status message when the container exits with an error and the terminationMessagePath has no contents.\n - `\"File\"` is the default behavior and will set the container status message to the contents of the container's terminationMessagePath when the container exits.",
                    "type": "string",
                    "enum": [
                        "FallbackToLogsOnError",
                        "File"
                    ]
                },
                "tty": {
                    "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
                    "type": "boolean"
                },
                "volumeDevices": {
                    "description": "volumeDevices is the list of block devices to be used by the container.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
                    },
                    "x-kubernetes-patch-merge-key": "devicePath",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "volumeMounts": {
                    "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
                    },
                    "x-kubernetes-patch-merge-key": "mountPath",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "workingDir": {
                    "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.ContainerPort": {
            "description": "ContainerPort represents a network port in a single container.",
            "type": "object",
            "required": [
                "containerPort"
            ],
            "properties": {
                "containerPort": {
                    "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                    "type": "integer",
                    "format": "int32"
                },
                "hostIP": {
                    "description": "What host IP to bind the external port to.",
                    "type": "string"
                },
                "hostPort": {
                    "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
                    "type": "string"
                },
                "protocol": {
                    "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".\n\nPossible enum values:\n - `\"SCTP\"` is the SCTP protocol.\n - `\"TCP\"` is the TCP protocol.\n - `\"UDP\"` is the UDP protocol.",
                    "type": "string",
                    "enum": [
                        "SCTP",
                        "TCP",
                        "UDP"
                    ]
                }
            }
        },
        "io.k8s.api.core.v1.EnvFromSource": {
            "description": "EnvFromSource represents the source of a set of ConfigMaps",
            "type": "object",
            "properties": {
                "configMapRef": {
                    "description": "The ConfigMap to select from",
                    "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource"
                },
                "prefix": {
                    "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                    "type": "string"
                },
                "secretRef": {
                    "description": "The Secret to select from",
                    "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource"
                }
            }
        },
        "io.k8s.api.core.v1.EnvVar": {
            "description": "EnvVar represents an environment variable present in a Container.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                },
                "value": {
                    "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                    "type": "string"
                },
                "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource"
                }
            }
        },
        "io.k8s.api.core.v1.EnvVarSource": {
            "description": "EnvVarSource represents a source for the value of an EnvVar.",
            "type": "object",
            "properties": {
                "configMapKeyRef": {
                    "description": "Selects a key of a ConfigMap.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
                },
                "fieldRef": {
                    "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
                },
                "resourceFieldRef": {
                    "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
                },
                "secretKeyRef": {
                    "description": "Selects a key of a secret in the pod's namespace",
                    "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
                }
            }
        },
        "io.k8s.api.core.v1.ExecAction": {
            "description": "ExecAction describes a \"run in container\" action.",
            "type": "object",
            "properties": {
                "command": {
                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "io.k8s.api.core.v1.GRPCAction": {
            "type": "object",
            "required": [
                "port"
            ],
            "properties": {
                "port": {
                    "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                    "type": "integer",
                    "format": "int32"
                },
                "service": {
                    "description": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.HTTPGetAction": {
            "description": "HTTPGetAction describes an action based on HTTP Get requests.",
            "type": "object",
            "required": [
                "port"
            ],
            "properties": {
                "host": {
                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                    "type": "string"
                },
                "httpHeaders": {
                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.HTTPHeader"
                    }
                },
                "path": {
                    "description": "Path to access on the HTTP server.",
                    "type": "string"
                },
                "port": {
                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                },
                "scheme": {
                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.\n\nPossible enum values:\n - `\"HTTP\"` means that the scheme used will be http://\n - `\"HTTPS\"` means that the scheme used will be https://",
                    "type": "string",
                    "enum": [
                        "HTTP",
                        "HTTPS"
                    ]
                }
            }
        },
        "io.k8s.api.core.v1.HTTPHeader": {
            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "description": "The header field name",
                    "type": "string"
                },
                "value": {
                    "description": "The header field value",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.Lifecycle": {
            "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
            "type": "object",
            "properties": {
                "postStart": {
                    "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                    "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler"
                },
                "preStop": {
                    "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                    "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler"
                }
            }
        },
        "io.k8s.api.core.v1.LifecycleHandler": {
            "description": "LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.",
            "type": "object",
            "properties": {
                "exec": {
                    "description": "Exec specifies the action to take.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
                },
                "httpGet": {
                    "description": "HTTPGet specifies the http request to perform.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
                },
                "tcpSocket": {
                    "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
                }
            }
        },
        "io.k8s.api.core.v1.LocalObjectReference": {
            "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                }
            },
            "x-kubernetes-map-type": "atomic"
        },
        "io.k8s.api.core.v1.ObjectFieldSelector": {
            "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
            "type": "object",
            "required": [
                "fieldPath"
            ],
            "properties": {
                "apiVersion": {
                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "Path of the field to select in the specified API version.",
                    "type": "string"
                }
            },
            "x-kubernetes-map-type": "atomic"
        },
        "io.k8s.api.core.v1.Probe": {
            "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
            "type": "object",
            "properties": {
                "exec": {
                    "description": "Exec specifies the action to take.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
                },
                "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                },
                "grpc": {
                    "description": "GRPC specifies an action involving a GRPC port. This is a beta field and requires enabling GRPCContainerProbe feature gate.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.GRPCAction"
                },
                "httpGet": {
                    "description": "HTTPGet specifies the http request to perform.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
                },
                "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                },
                "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                },
                "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                },
                "tcpSocket": {
                    "description": "TCPSocket specifies an action involving a TCP port.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
                },
                "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                },
                "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "io.k8s.api.core.v1.ResourceClaim": {
            "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.ResourceFieldSelector": {
            "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
            "type": "object",
            "required": [
                "resource"
            ],
            "properties": {
                "containerName": {
                    "description": "Container name: required for volumes, optional for env vars",
                    "type": "string"
                },
                "divisor": {
                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                },
                "resource": {
                    "description": "Required: resource to select",
                    "type": "string"
                }
            },
            "x-kubernetes-map-type": "atomic"
        },
        "io.k8s.api.core.v1.ResourceRequirements": {
            "description": "ResourceRequirements describes the compute resource requirements.",
            "type": "object",
            "properties": {
                "claims": {
                    "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.ResourceClaim"
                    },
                    "x-kubernetes-list-type": "set"
                },
                "limits": {
                    "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                    }
                },
                "requests": {
                    "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                    }
                }
            }
        },
        "io.k8s.api.core.v1.SELinuxOptions": {
            "description": "SELinuxOptions are the labels to be applied to the container",
            "type": "object",
            "properties": {
                "level": {
                    "description": "Level is SELinux level label that applies to the container.",
                    "type": "string"
                },
                "role": {
                    "description": "Role is a SELinux role label that applies to the container.",
                    "type": "string"
                },
                "type": {
                    "description": "Type is a SELinux type label that applies to the container.",
                    "type": "string"
                },
                "user": {
                    "description": "User is a SELinux user label that applies to the container.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.SeccompProfile": {
            "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "localhostProfile": {
                    "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
                    "type": "string"
                },
                "type": {
                    "description": "type indicates which kind of seccomp profile will be applied. Valid options are:\n\nLocalhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.\n\nPossible enum values:\n - `\"Localhost\"` indicates a profile defined in a file on the node should be used. The file's location relative to <kubelet-root-dir>/seccomp.\n - `\"RuntimeDefault\"` represents the default container runtime seccomp profile.\n - `\"Unconfined\"` indicates no seccomp profile is applied (A.K.A. unconfined).",
                    "type": "string",
                    "enum": [
                        "Localhost",
                        "RuntimeDefault",
                        "Unconfined"
                    ]
                }
            },
            "x-kubernetes-unions": [
                {
                    "discriminator": "type",
                    "fields-to-discriminateBy": {
                        "localhostProfile": "LocalhostProfile"
                    }
                }
            ]
        },
        "io.k8s.api.core.v1.SecretEnvSource": {
            "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the Secret must be defined",
                    "type": "boolean"
                }
            }
        },
        "io.k8s.api.core.v1.SecretKeySelector": {
            "description": "SecretKeySelector selects a key of a Secret.",
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the Secret or its key must be defined",
                    "type": "boolean"
                }
            },
            "x-kubernetes-map-type": "atomic"
        },
        "io.k8s.api.core.v1.SecurityContext": {
            "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
            "type": "object",
            "properties": {
                "allowPrivilegeEscalation": {
                    "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                },
                "capabilities": {
                    "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities"
                },
                "privileged": {
                    "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                },
                "procMount": {
                    "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.",
                    "type": "string"
                },
                "readOnlyRootFilesystem": {
                    "description": "Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                },
                "runAsGroup": {
                    "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
                    "type": "integer",
                    "format": "int64"
                },
                "runAsNonRoot": {
                    "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "type": "boolean"
                },
                "runAsUser": {
                    "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
                    "type": "integer",
                    "format": "int64"
                },
                "seLinuxOptions": {
                    "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
                },
                "seccompProfile": {
                    "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
                },
                "windowsOptions": {
                    "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.",
                    "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
                }
            }
        },
        "io.k8s.api.core.v1.TCPSocketAction": {
            "description": "TCPSocketAction describes an action based on opening a socket",
            "type": "object",
            "required": [
                "port"
            ],
            "properties": {
                "host": {
                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                    "type": "string"
                },
                "port": {
                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                }
            }
        },
        "io.k8s.api.core.v1.VolumeDevice": {
            "description": "volumeDevice describes a mapping of a raw block device within a container.",
            "type": "object",
            "required": [
                "name",
                "devicePath"
            ],
            "properties": {
                "devicePath": {
                    "description": "devicePath is the path inside of the container that the device will be mapped to.",
                    "type": "string"
                },
                "name": {
                    "description": "name must match the name of a persistentVolumeClaim in the pod",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.VolumeMount": {
            "description": "VolumeMount describes a mounting of a Volume within a container.",
            "type": "object",
            "required": [
                "name",
                "mountPath"
            ],
            "properties": {
                "mountPath": {
                    "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                    "type": "string"
                },
                "mountPropagation": {
                    "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                    "type": "string"
                },
                "name": {
                    "description": "This must match the Name of a Volume.",
                    "type": "string"
                },
                "readOnly": {
                    "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                    "type": "boolean"
                },
                "subPath": {
                    "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                    "type": "string"
                },
                "subPathExpr": {
                    "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.core.v1.WindowsSecurityContextOptions": {
            "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials.",
            "type": "object",
            "properties": {
                "gmsaCredentialSpec": {
                    "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
                    "type": "string"
                },
                "gmsaCredentialSpecName": {
                    "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                    "type": "string"
                },
                "hostProcess": {
                    "description": "HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.",
                    "type": "boolean"
                },
                "runAsUserName": {
                    "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.api.resource.Quantity": {
            "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n``` <quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber> ```\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost - No fractional digits will be emitted - The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\" - 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
            "type": "string"
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup": {
            "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
            "type": "object",
            "required": [
                "name",
                "versions"
            ],
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "name is the name of the group.",
                    "type": "string"
                },
                "preferredVersion": {
                    "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
                },
                "serverAddressByClientCIDRs": {
                    "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
                    }
                },
                "versions": {
                    "description": "versions are the versions supported in this group.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
                    }
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "APIGroup",
                    "version": "v1"
                }
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList": {
            "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
            "type": "object",
            "required": [
                "groups"
            ],
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                },
                "groups": {
                    "description": "groups is a list of APIGroup.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
                    }
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "APIGroupList",
                    "version": "v1"
                }
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource": {
            "description": "APIResource specifies the name of a resource and whether it is namespaced.",
            "type": "object",
            "required": [
                "name",
                "singularName",
                "namespaced",
                "kind",
                "verbs"
            ],
            "properties": {
                "categories": {
                    "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "group": {
                    "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
                    "type": "string"
                },
                "kind": {
                    "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
                    "type": "string"
                },
                "name": {
                    "description": "name is the plural name of the resource.",
                    "type": "string"
                },
                "namespaced": {
                    "description": "namespaced indicates if a resource is namespaced or not.",
                    "type": "boolean"
                },
                "shortNames": {
                    "description": "shortNames is a list of suggested short names of the resource.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "singularName": {
                    "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
                    "type": "string"
                },
                "storageVersionHash": {
                    "description": "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
                    "type": "string"
                },
                "verbs": {
                    "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList": {
            "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
            "type": "object",
            "required": [
                "groupVersion",
                "resources"
            ],
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                },
                "groupVersion": {
                    "description": "groupVersion is the group and version this APIResourceList is for.",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "resources": {
                    "description": "resources contains the name of the resources and if they are namespaced.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
                    }
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "APIResourceList",
                    "version": "v1"
                }
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
            "description": "DeleteOptions may be provided when deleting an API object.",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                },
                "dryRun": {
                    "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gracePeriodSeconds": {
                    "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                    "type": "integer",
                    "format": "int64"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "orphanDependents": {
                    "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                    "type": "boolean"
                },
                "preconditions": {
                    "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
                },
                "propagationPolicy": {
                    "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                    "type": "string"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "DeleteOptions",
                    "version": "v1"
                },
                {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "kind": "DeleteOptions",
                    "version": "v1"
                }
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
            "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
            "type": "object"
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery": {
            "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
            "type": "object",
            "required": [
                "groupVersion",
                "version"
            ],
            "properties": {
                "groupVersion": {
                    "description": "groupVersion specifies the API group and version in the form \"group/version\"",
                    "type": "string"
                },
                "version": {
                    "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
            "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
            "type": "object",
            "properties": {
                "continue": {
                    "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
                    "type": "string"
                },
                "remainingItemCount": {
                    "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
                    "type": "integer",
                    "format": "int64"
                },
                "resourceVersion": {
                    "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                    "type": "string"
                },
                "fieldsType": {
                    "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                    "type": "string"
                },
                "fieldsV1": {
                    "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
                },
                "manager": {
                    "description": "Manager is an identifier of the workflow managing these fields.",
                    "type": "string"
                },
                "operation": {
                    "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                    "type": "string"
                },
                "subresource": {
                    "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                    "type": "string"
                },
                "time": {
                    "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                    "type": "integer",
                    "format": "int64"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-kubernetes-patch-strategy": "merge"
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                    "type": "integer",
                    "format": "int64"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
                    },
                    "x-kubernetes-patch-merge-key": "uid",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "name",
                "uid"
            ],
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                    "type": "boolean"
                },
                "controller": {
                    "description": "If true, this reference points to the managing controller.",
                    "type": "boolean"
                },
                "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            },
            "x-kubernetes-map-type": "atomic"
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
            "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
            "type": "object"
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
            "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
            "type": "object",
            "properties": {
                "resourceVersion": {
                    "description": "Specifies the target ResourceVersion",
                    "type": "string"
                },
                "uid": {
                    "description": "Specifies the target UID.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR": {
            "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
            "type": "object",
            "required": [
                "clientCIDR",
                "serverAddress"
            ],
            "properties": {
                "clientCIDR": {
                    "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
                    "type": "string"
                },
                "serverAddress": {
                    "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
            "description": "Status is a return value for calls that don't return other objects.",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                },
                "code": {
                    "description": "Suggested HTTP return code for this status, 0 if not set.",
                    "type": "integer",
                    "format": "int32"
                },
                "details": {
                    "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "message": {
                    "description": "A human-readable description of the status of this operation.",
                    "type": "string"
                },
                "metadata": {
                    "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                },
                "reason": {
                    "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                    "type": "string"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "Status",
                    "version": "v1"
                }
            ]
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
            "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
            "type": "object",
            "properties": {
                "field": {
                    "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
                    "type": "string"
                },
                "message": {
                    "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
                    "type": "string"
                },
                "reason": {
                    "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
            "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
            "type": "object",
            "properties": {
                "causes": {
                    "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
                    }
                },
                "group": {
                    "description": "The group attribute of the resource associated with the status StatusReason.",
                    "type": "string"
                },
                "kind": {
                    "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
                    "type": "string"
                },
                "retryAfterSeconds": {
                    "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
                    "type": "integer",
                    "format": "int32"
                },
                "uid": {
                    "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
            "type": "string",
            "format": "date-time"
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
            "description": "Event represents a single event to a watched resource.",
            "type": "object",
            "required": [
                "type",
                "object"
            ],
            "properties": {
                "object": {
                    "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
                },
                "type": {
                    "type": "string"
                }
            },
            "x-kubernetes-group-version-kind": [
                {
                    "group": "",
                    "kind": "WatchEvent",
                    "version": "v1"
                },
                {
                    "group": "core.fornax-serverless.centaurusinfra.io",
                    "kind": "WatchEvent",
                    "version": "v1"
                }
            ]
        },
        "io.k8s.apimachinery.pkg.runtime.RawExtension": {
            "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
            "type": "object"
        },
        "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
            "description": "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.",
            "type": "string",
            "format": "int-or-string"
        },
        "io.k8s.apimachinery.pkg.version.Info": {
            "description": "Info contains versioning information. how we'll want to distribute that information.",
            "type": "object",
            "required": [
                "major",
                "minor",
                "gitVersion",
                "gitCommit",
                "gitTreeState",
                "buildDate",
                "goVersion",
                "compiler",
                "platform"
            ],
            "properties": {
                "buildDate": {
                    "type": "string"
                },
                "compiler": {
                    "type": "string"
                },
                "gitCommit": {
                    "type": "string"
                },
                "gitTreeState": {
                    "type": "string"
                },
                "gitVersion": {
                    "type": "string"
                },
                "goVersion": {
                    "type": "string"
                },
                "major": {
                    "type": "string"
                },
                "minor": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                }
            }
        }
    }
}
