// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/fornaxcore/grpc/fornaxcore.proto

package grpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	MessageType_UNSPECIFIED               MessageType = 0
	MessageType_FORNAX_CORE_CONFIGURATION MessageType = 100
	MessageType_NODE_CONFIGURATION        MessageType = 200
	MessageType_NODE_REGISTER             MessageType = 201
	MessageType_NODE_READY                MessageType = 202
	MessageType_NODE_STATE                MessageType = 203
	MessageType_NODE_FULL_SYNC            MessageType = 204
	MessageType_POD_CREATE                MessageType = 300
	MessageType_POD_TERMINATE             MessageType = 301
	MessageType_POD_HIBERNATE             MessageType = 302
	MessageType_POD_STATE                 MessageType = 303
)

var MessageType_name = map[int32]string{
	0:   "UNSPECIFIED",
	100: "FORNAX_CORE_CONFIGURATION",
	200: "NODE_CONFIGURATION",
	201: "NODE_REGISTER",
	202: "NODE_READY",
	203: "NODE_STATE",
	204: "NODE_FULL_SYNC",
	300: "POD_CREATE",
	301: "POD_TERMINATE",
	302: "POD_HIBERNATE",
	303: "POD_STATE",
}

var MessageType_value = map[string]int32{
	"UNSPECIFIED":               0,
	"FORNAX_CORE_CONFIGURATION": 100,
	"NODE_CONFIGURATION":        200,
	"NODE_REGISTER":             201,
	"NODE_READY":                202,
	"NODE_STATE":                203,
	"NODE_FULL_SYNC":            204,
	"POD_CREATE":                300,
	"POD_TERMINATE":             301,
	"POD_HIBERNATE":             302,
	"POD_STATE":                 303,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{0}
}

type PodState_State int32

const (
	PodState_Creating    PodState_State = 0
	PodState_Standby     PodState_State = 10
	PodState_Activating  PodState_State = 20
	PodState_Running     PodState_State = 30
	PodState_Evacuating  PodState_State = 40
	PodState_Terminating PodState_State = 50
	PodState_Terminated  PodState_State = 60
)

var PodState_State_name = map[int32]string{
	0:  "Creating",
	10: "Standby",
	20: "Activating",
	30: "Running",
	40: "Evacuating",
	50: "Terminating",
	60: "Terminated",
}

var PodState_State_value = map[string]int32{
	"Creating":    0,
	"Standby":     10,
	"Activating":  20,
	"Running":     30,
	"Evacuating":  40,
	"Terminating": 50,
	"Terminated":  60,
}

func (x PodState_State) String() string {
	return proto.EnumName(PodState_State_name, int32(x))
}

func (PodState_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{9, 0}
}

type FornaxCoreMessage struct {
	NodeIdentifier *NodeIdentifier `protobuf:"bytes,1,opt,name=nodeIdentifier,proto3" json:"nodeIdentifier,omitempty"`
	MessageType    MessageType     `protobuf:"varint,2,opt,name=messageType,proto3,enum=centaurusinfra.io.fornaxcore.service.MessageType" json:"messageType,omitempty"`
	// Types that are valid to be assigned to MessageBody:
	//	*FornaxCoreMessage_FornaxCoreConfiguration
	//	*FornaxCoreMessage_NodeConfiguration
	//	*FornaxCoreMessage_NodeRegistry
	//	*FornaxCoreMessage_NodeReady
	//	*FornaxCoreMessage_NodeState
	//	*FornaxCoreMessage_NodeFullSync
	//	*FornaxCoreMessage_PodCreate
	//	*FornaxCoreMessage_PodTerminate
	//	*FornaxCoreMessage_PodHibernate
	//	*FornaxCoreMessage_PodState
	MessageBody          isFornaxCoreMessage_MessageBody `protobuf_oneof:"MessageBody"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *FornaxCoreMessage) Reset()         { *m = FornaxCoreMessage{} }
func (m *FornaxCoreMessage) String() string { return proto.CompactTextString(m) }
func (*FornaxCoreMessage) ProtoMessage()    {}
func (*FornaxCoreMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{0}
}

func (m *FornaxCoreMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FornaxCoreMessage.Unmarshal(m, b)
}
func (m *FornaxCoreMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FornaxCoreMessage.Marshal(b, m, deterministic)
}
func (m *FornaxCoreMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FornaxCoreMessage.Merge(m, src)
}
func (m *FornaxCoreMessage) XXX_Size() int {
	return xxx_messageInfo_FornaxCoreMessage.Size(m)
}
func (m *FornaxCoreMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_FornaxCoreMessage.DiscardUnknown(m)
}

var xxx_messageInfo_FornaxCoreMessage proto.InternalMessageInfo

func (m *FornaxCoreMessage) GetNodeIdentifier() *NodeIdentifier {
	if m != nil {
		return m.NodeIdentifier
	}
	return nil
}

func (m *FornaxCoreMessage) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_UNSPECIFIED
}

type isFornaxCoreMessage_MessageBody interface {
	isFornaxCoreMessage_MessageBody()
}

type FornaxCoreMessage_FornaxCoreConfiguration struct {
	FornaxCoreConfiguration *FornaxCoreConfiguration `protobuf:"bytes,100,opt,name=fornaxCoreConfiguration,proto3,oneof"`
}

type FornaxCoreMessage_NodeConfiguration struct {
	NodeConfiguration *NodeConfiguration `protobuf:"bytes,200,opt,name=nodeConfiguration,proto3,oneof"`
}

type FornaxCoreMessage_NodeRegistry struct {
	NodeRegistry *NodeRegistry `protobuf:"bytes,201,opt,name=nodeRegistry,proto3,oneof"`
}

type FornaxCoreMessage_NodeReady struct {
	NodeReady *NodeReady `protobuf:"bytes,202,opt,name=nodeReady,proto3,oneof"`
}

type FornaxCoreMessage_NodeState struct {
	NodeState *NodeState `protobuf:"bytes,203,opt,name=nodeState,proto3,oneof"`
}

type FornaxCoreMessage_NodeFullSync struct {
	NodeFullSync *NodeFullSync `protobuf:"bytes,204,opt,name=nodeFullSync,proto3,oneof"`
}

type FornaxCoreMessage_PodCreate struct {
	PodCreate *PodCreate `protobuf:"bytes,300,opt,name=podCreate,proto3,oneof"`
}

type FornaxCoreMessage_PodTerminate struct {
	PodTerminate *PodTerminate `protobuf:"bytes,301,opt,name=podTerminate,proto3,oneof"`
}

type FornaxCoreMessage_PodHibernate struct {
	PodHibernate *PodHibernate `protobuf:"bytes,302,opt,name=podHibernate,proto3,oneof"`
}

type FornaxCoreMessage_PodState struct {
	PodState *PodState `protobuf:"bytes,303,opt,name=podState,proto3,oneof"`
}

func (*FornaxCoreMessage_FornaxCoreConfiguration) isFornaxCoreMessage_MessageBody() {}

func (*FornaxCoreMessage_NodeConfiguration) isFornaxCoreMessage_MessageBody() {}

func (*FornaxCoreMessage_NodeRegistry) isFornaxCoreMessage_MessageBody() {}

func (*FornaxCoreMessage_NodeReady) isFornaxCoreMessage_MessageBody() {}

func (*FornaxCoreMessage_NodeState) isFornaxCoreMessage_MessageBody() {}

func (*FornaxCoreMessage_NodeFullSync) isFornaxCoreMessage_MessageBody() {}

func (*FornaxCoreMessage_PodCreate) isFornaxCoreMessage_MessageBody() {}

func (*FornaxCoreMessage_PodTerminate) isFornaxCoreMessage_MessageBody() {}

func (*FornaxCoreMessage_PodHibernate) isFornaxCoreMessage_MessageBody() {}

func (*FornaxCoreMessage_PodState) isFornaxCoreMessage_MessageBody() {}

func (m *FornaxCoreMessage) GetMessageBody() isFornaxCoreMessage_MessageBody {
	if m != nil {
		return m.MessageBody
	}
	return nil
}

func (m *FornaxCoreMessage) GetFornaxCoreConfiguration() *FornaxCoreConfiguration {
	if x, ok := m.GetMessageBody().(*FornaxCoreMessage_FornaxCoreConfiguration); ok {
		return x.FornaxCoreConfiguration
	}
	return nil
}

func (m *FornaxCoreMessage) GetNodeConfiguration() *NodeConfiguration {
	if x, ok := m.GetMessageBody().(*FornaxCoreMessage_NodeConfiguration); ok {
		return x.NodeConfiguration
	}
	return nil
}

func (m *FornaxCoreMessage) GetNodeRegistry() *NodeRegistry {
	if x, ok := m.GetMessageBody().(*FornaxCoreMessage_NodeRegistry); ok {
		return x.NodeRegistry
	}
	return nil
}

func (m *FornaxCoreMessage) GetNodeReady() *NodeReady {
	if x, ok := m.GetMessageBody().(*FornaxCoreMessage_NodeReady); ok {
		return x.NodeReady
	}
	return nil
}

func (m *FornaxCoreMessage) GetNodeState() *NodeState {
	if x, ok := m.GetMessageBody().(*FornaxCoreMessage_NodeState); ok {
		return x.NodeState
	}
	return nil
}

func (m *FornaxCoreMessage) GetNodeFullSync() *NodeFullSync {
	if x, ok := m.GetMessageBody().(*FornaxCoreMessage_NodeFullSync); ok {
		return x.NodeFullSync
	}
	return nil
}

func (m *FornaxCoreMessage) GetPodCreate() *PodCreate {
	if x, ok := m.GetMessageBody().(*FornaxCoreMessage_PodCreate); ok {
		return x.PodCreate
	}
	return nil
}

func (m *FornaxCoreMessage) GetPodTerminate() *PodTerminate {
	if x, ok := m.GetMessageBody().(*FornaxCoreMessage_PodTerminate); ok {
		return x.PodTerminate
	}
	return nil
}

func (m *FornaxCoreMessage) GetPodHibernate() *PodHibernate {
	if x, ok := m.GetMessageBody().(*FornaxCoreMessage_PodHibernate); ok {
		return x.PodHibernate
	}
	return nil
}

func (m *FornaxCoreMessage) GetPodState() *PodState {
	if x, ok := m.GetMessageBody().(*FornaxCoreMessage_PodState); ok {
		return x.PodState
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FornaxCoreMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FornaxCoreMessage_FornaxCoreConfiguration)(nil),
		(*FornaxCoreMessage_NodeConfiguration)(nil),
		(*FornaxCoreMessage_NodeRegistry)(nil),
		(*FornaxCoreMessage_NodeReady)(nil),
		(*FornaxCoreMessage_NodeState)(nil),
		(*FornaxCoreMessage_NodeFullSync)(nil),
		(*FornaxCoreMessage_PodCreate)(nil),
		(*FornaxCoreMessage_PodTerminate)(nil),
		(*FornaxCoreMessage_PodHibernate)(nil),
		(*FornaxCoreMessage_PodState)(nil),
	}
}

type FornaxCore struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Identifier           string   `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FornaxCore) Reset()         { *m = FornaxCore{} }
func (m *FornaxCore) String() string { return proto.CompactTextString(m) }
func (*FornaxCore) ProtoMessage()    {}
func (*FornaxCore) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{1}
}

func (m *FornaxCore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FornaxCore.Unmarshal(m, b)
}
func (m *FornaxCore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FornaxCore.Marshal(b, m, deterministic)
}
func (m *FornaxCore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FornaxCore.Merge(m, src)
}
func (m *FornaxCore) XXX_Size() int {
	return xxx_messageInfo_FornaxCore.Size(m)
}
func (m *FornaxCore) XXX_DiscardUnknown() {
	xxx_messageInfo_FornaxCore.DiscardUnknown(m)
}

var xxx_messageInfo_FornaxCore proto.InternalMessageInfo

func (m *FornaxCore) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *FornaxCore) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type FornaxCoreConfiguration struct {
	Primary              *FornaxCore   `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`
	Standbys             []*FornaxCore `protobuf:"bytes,2,rep,name=standbys,proto3" json:"standbys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FornaxCoreConfiguration) Reset()         { *m = FornaxCoreConfiguration{} }
func (m *FornaxCoreConfiguration) String() string { return proto.CompactTextString(m) }
func (*FornaxCoreConfiguration) ProtoMessage()    {}
func (*FornaxCoreConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{2}
}

func (m *FornaxCoreConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FornaxCoreConfiguration.Unmarshal(m, b)
}
func (m *FornaxCoreConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FornaxCoreConfiguration.Marshal(b, m, deterministic)
}
func (m *FornaxCoreConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FornaxCoreConfiguration.Merge(m, src)
}
func (m *FornaxCoreConfiguration) XXX_Size() int {
	return xxx_messageInfo_FornaxCoreConfiguration.Size(m)
}
func (m *FornaxCoreConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_FornaxCoreConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_FornaxCoreConfiguration proto.InternalMessageInfo

func (m *FornaxCoreConfiguration) GetPrimary() *FornaxCore {
	if m != nil {
		return m.Primary
	}
	return nil
}

func (m *FornaxCoreConfiguration) GetStandbys() []*FornaxCore {
	if m != nil {
		return m.Standbys
	}
	return nil
}

type NodeIdentifier struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Identifier           string   `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeIdentifier) Reset()         { *m = NodeIdentifier{} }
func (m *NodeIdentifier) String() string { return proto.CompactTextString(m) }
func (*NodeIdentifier) ProtoMessage()    {}
func (*NodeIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{3}
}

func (m *NodeIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeIdentifier.Unmarshal(m, b)
}
func (m *NodeIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeIdentifier.Marshal(b, m, deterministic)
}
func (m *NodeIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeIdentifier.Merge(m, src)
}
func (m *NodeIdentifier) XXX_Size() int {
	return xxx_messageInfo_NodeIdentifier.Size(m)
}
func (m *NodeIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_NodeIdentifier proto.InternalMessageInfo

func (m *NodeIdentifier) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *NodeIdentifier) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

// node register with fornax core, wait for a configuration message to initialize it
type NodeRegistry struct {
	NodeRevision int64 `protobuf:"varint,1,opt,name=nodeRevision,proto3" json:"nodeRevision,omitempty"`
	//k8s.io.api.core.v1.Node node = 2;
	Node                 string   `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeRegistry) Reset()         { *m = NodeRegistry{} }
func (m *NodeRegistry) String() string { return proto.CompactTextString(m) }
func (*NodeRegistry) ProtoMessage()    {}
func (*NodeRegistry) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{4}
}

func (m *NodeRegistry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeRegistry.Unmarshal(m, b)
}
func (m *NodeRegistry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeRegistry.Marshal(b, m, deterministic)
}
func (m *NodeRegistry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeRegistry.Merge(m, src)
}
func (m *NodeRegistry) XXX_Size() int {
	return xxx_messageInfo_NodeRegistry.Size(m)
}
func (m *NodeRegistry) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeRegistry.DiscardUnknown(m)
}

var xxx_messageInfo_NodeRegistry proto.InternalMessageInfo

func (m *NodeRegistry) GetNodeRevision() int64 {
	if m != nil {
		return m.NodeRevision
	}
	return 0
}

func (m *NodeRegistry) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

// fornax core send node configuration to node to initialize using this configuration before tell fornax it's ready
type NodeConfiguration struct {
	ClusterDomain string `protobuf:"bytes,1,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	//k8s.io.api.core.v1.Node node = 2;
	Node                 string   `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeConfiguration) Reset()         { *m = NodeConfiguration{} }
func (m *NodeConfiguration) String() string { return proto.CompactTextString(m) }
func (*NodeConfiguration) ProtoMessage()    {}
func (*NodeConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{5}
}

func (m *NodeConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeConfiguration.Unmarshal(m, b)
}
func (m *NodeConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeConfiguration.Marshal(b, m, deterministic)
}
func (m *NodeConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeConfiguration.Merge(m, src)
}
func (m *NodeConfiguration) XXX_Size() int {
	return xxx_messageInfo_NodeConfiguration.Size(m)
}
func (m *NodeConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_NodeConfiguration proto.InternalMessageInfo

func (m *NodeConfiguration) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

func (m *NodeConfiguration) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

// node report back to fornax core, it's ready for take pod
type NodeReady struct {
	NodeRevision int64 `protobuf:"varint,1,opt,name=nodeRevision,proto3" json:"nodeRevision,omitempty"`
	//k8s.io.api.core.v1.Node node = 2;
	Node                 string      `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	PodStates            []*PodState `protobuf:"bytes,3,rep,name=podStates,proto3" json:"podStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NodeReady) Reset()         { *m = NodeReady{} }
func (m *NodeReady) String() string { return proto.CompactTextString(m) }
func (*NodeReady) ProtoMessage()    {}
func (*NodeReady) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{6}
}

func (m *NodeReady) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeReady.Unmarshal(m, b)
}
func (m *NodeReady) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeReady.Marshal(b, m, deterministic)
}
func (m *NodeReady) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeReady.Merge(m, src)
}
func (m *NodeReady) XXX_Size() int {
	return xxx_messageInfo_NodeReady.Size(m)
}
func (m *NodeReady) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeReady.DiscardUnknown(m)
}

var xxx_messageInfo_NodeReady proto.InternalMessageInfo

func (m *NodeReady) GetNodeRevision() int64 {
	if m != nil {
		return m.NodeRevision
	}
	return 0
}

func (m *NodeReady) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *NodeReady) GetPodStates() []*PodState {
	if m != nil {
		return m.PodStates
	}
	return nil
}

// node report back full state to fornax core
type NodeState struct {
	NodeRevision int64 `protobuf:"varint,1,opt,name=nodeRevision,proto3" json:"nodeRevision,omitempty"`
	//k8s.io.api.core.v1.Node node = 2;
	Node                 string      `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	PodStates            []*PodState `protobuf:"bytes,3,rep,name=podStates,proto3" json:"podStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NodeState) Reset()         { *m = NodeState{} }
func (m *NodeState) String() string { return proto.CompactTextString(m) }
func (*NodeState) ProtoMessage()    {}
func (*NodeState) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{7}
}

func (m *NodeState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeState.Unmarshal(m, b)
}
func (m *NodeState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeState.Marshal(b, m, deterministic)
}
func (m *NodeState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeState.Merge(m, src)
}
func (m *NodeState) XXX_Size() int {
	return xxx_messageInfo_NodeState.Size(m)
}
func (m *NodeState) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeState.DiscardUnknown(m)
}

var xxx_messageInfo_NodeState proto.InternalMessageInfo

func (m *NodeState) GetNodeRevision() int64 {
	if m != nil {
		return m.NodeRevision
	}
	return 0
}

func (m *NodeState) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *NodeState) GetPodStates() []*PodState {
	if m != nil {
		return m.PodStates
	}
	return nil
}

// fornax core ask node to send its full state if node revision are not same between fornax core and node
type NodeFullSync struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeFullSync) Reset()         { *m = NodeFullSync{} }
func (m *NodeFullSync) String() string { return proto.CompactTextString(m) }
func (*NodeFullSync) ProtoMessage()    {}
func (*NodeFullSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{8}
}

func (m *NodeFullSync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeFullSync.Unmarshal(m, b)
}
func (m *NodeFullSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeFullSync.Marshal(b, m, deterministic)
}
func (m *NodeFullSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeFullSync.Merge(m, src)
}
func (m *NodeFullSync) XXX_Size() int {
	return xxx_messageInfo_NodeFullSync.Size(m)
}
func (m *NodeFullSync) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeFullSync.DiscardUnknown(m)
}

var xxx_messageInfo_NodeFullSync proto.InternalMessageInfo

type PodState struct {
	NodeRevision int64          `protobuf:"varint,1,opt,name=nodeRevision,proto3" json:"nodeRevision,omitempty"`
	State        PodState_State `protobuf:"varint,2,opt,name=state,proto3,enum=centaurusinfra.io.fornaxcore.service.PodState_State" json:"state,omitempty"`
	//k8s.io.api.core.v1.Pod pod = 3;
	Pod                  string       `protobuf:"bytes,3,opt,name=pod,proto3" json:"pod,omitempty"`
	Resource             *PodResource `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PodState) Reset()         { *m = PodState{} }
func (m *PodState) String() string { return proto.CompactTextString(m) }
func (*PodState) ProtoMessage()    {}
func (*PodState) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{9}
}

func (m *PodState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodState.Unmarshal(m, b)
}
func (m *PodState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodState.Marshal(b, m, deterministic)
}
func (m *PodState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodState.Merge(m, src)
}
func (m *PodState) XXX_Size() int {
	return xxx_messageInfo_PodState.Size(m)
}
func (m *PodState) XXX_DiscardUnknown() {
	xxx_messageInfo_PodState.DiscardUnknown(m)
}

var xxx_messageInfo_PodState proto.InternalMessageInfo

func (m *PodState) GetNodeRevision() int64 {
	if m != nil {
		return m.NodeRevision
	}
	return 0
}

func (m *PodState) GetState() PodState_State {
	if m != nil {
		return m.State
	}
	return PodState_Creating
}

func (m *PodState) GetPod() string {
	if m != nil {
		return m.Pod
	}
	return ""
}

func (m *PodState) GetResource() *PodResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

type PodResource struct {
	//k8s.io.api.core.v1.ResourceQuotaStatus resourceQuotaStatus = 1;
	ResourceQuotaStatus  string   `protobuf:"bytes,1,opt,name=resourceQuotaStatus,proto3" json:"resourceQuotaStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodResource) Reset()         { *m = PodResource{} }
func (m *PodResource) String() string { return proto.CompactTextString(m) }
func (*PodResource) ProtoMessage()    {}
func (*PodResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{10}
}

func (m *PodResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodResource.Unmarshal(m, b)
}
func (m *PodResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodResource.Marshal(b, m, deterministic)
}
func (m *PodResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodResource.Merge(m, src)
}
func (m *PodResource) XXX_Size() int {
	return xxx_messageInfo_PodResource.Size(m)
}
func (m *PodResource) XXX_DiscardUnknown() {
	xxx_messageInfo_PodResource.DiscardUnknown(m)
}

var xxx_messageInfo_PodResource proto.InternalMessageInfo

func (m *PodResource) GetResourceQuotaStatus() string {
	if m != nil {
		return m.ResourceQuotaStatus
	}
	return ""
}

type PodCreate struct {
	PodIdentifier string `protobuf:"bytes,1,opt,name=podIdentifier,proto3" json:"podIdentifier,omitempty"`
	//k8s.io.api.core.v1.Pod pod = 2;
	Pod string `protobuf:"bytes,2,opt,name=pod,proto3" json:"pod,omitempty"`
	//k8s.io.api.core.v1.ConfigMap configMap = 3;
	ConfigMap            string   `protobuf:"bytes,3,opt,name=configMap,proto3" json:"configMap,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodCreate) Reset()         { *m = PodCreate{} }
func (m *PodCreate) String() string { return proto.CompactTextString(m) }
func (*PodCreate) ProtoMessage()    {}
func (*PodCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{11}
}

func (m *PodCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodCreate.Unmarshal(m, b)
}
func (m *PodCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodCreate.Marshal(b, m, deterministic)
}
func (m *PodCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodCreate.Merge(m, src)
}
func (m *PodCreate) XXX_Size() int {
	return xxx_messageInfo_PodCreate.Size(m)
}
func (m *PodCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_PodCreate.DiscardUnknown(m)
}

var xxx_messageInfo_PodCreate proto.InternalMessageInfo

func (m *PodCreate) GetPodIdentifier() string {
	if m != nil {
		return m.PodIdentifier
	}
	return ""
}

func (m *PodCreate) GetPod() string {
	if m != nil {
		return m.Pod
	}
	return ""
}

func (m *PodCreate) GetConfigMap() string {
	if m != nil {
		return m.ConfigMap
	}
	return ""
}

type PodTerminate struct {
	PodIdentifier        string   `protobuf:"bytes,1,opt,name=podIdentifier,proto3" json:"podIdentifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodTerminate) Reset()         { *m = PodTerminate{} }
func (m *PodTerminate) String() string { return proto.CompactTextString(m) }
func (*PodTerminate) ProtoMessage()    {}
func (*PodTerminate) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{12}
}

func (m *PodTerminate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodTerminate.Unmarshal(m, b)
}
func (m *PodTerminate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodTerminate.Marshal(b, m, deterministic)
}
func (m *PodTerminate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodTerminate.Merge(m, src)
}
func (m *PodTerminate) XXX_Size() int {
	return xxx_messageInfo_PodTerminate.Size(m)
}
func (m *PodTerminate) XXX_DiscardUnknown() {
	xxx_messageInfo_PodTerminate.DiscardUnknown(m)
}

var xxx_messageInfo_PodTerminate proto.InternalMessageInfo

func (m *PodTerminate) GetPodIdentifier() string {
	if m != nil {
		return m.PodIdentifier
	}
	return ""
}

type PodHibernate struct {
	PodIdentifier        string   `protobuf:"bytes,1,opt,name=podIdentifier,proto3" json:"podIdentifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodHibernate) Reset()         { *m = PodHibernate{} }
func (m *PodHibernate) String() string { return proto.CompactTextString(m) }
func (*PodHibernate) ProtoMessage()    {}
func (*PodHibernate) Descriptor() ([]byte, []int) {
	return fileDescriptor_da9351c4a4ab5ec5, []int{13}
}

func (m *PodHibernate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodHibernate.Unmarshal(m, b)
}
func (m *PodHibernate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodHibernate.Marshal(b, m, deterministic)
}
func (m *PodHibernate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodHibernate.Merge(m, src)
}
func (m *PodHibernate) XXX_Size() int {
	return xxx_messageInfo_PodHibernate.Size(m)
}
func (m *PodHibernate) XXX_DiscardUnknown() {
	xxx_messageInfo_PodHibernate.DiscardUnknown(m)
}

var xxx_messageInfo_PodHibernate proto.InternalMessageInfo

func (m *PodHibernate) GetPodIdentifier() string {
	if m != nil {
		return m.PodIdentifier
	}
	return ""
}

func init() {
	proto.RegisterEnum("centaurusinfra.io.fornaxcore.service.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("centaurusinfra.io.fornaxcore.service.PodState_State", PodState_State_name, PodState_State_value)
	proto.RegisterType((*FornaxCoreMessage)(nil), "centaurusinfra.io.fornaxcore.service.FornaxCoreMessage")
	proto.RegisterType((*FornaxCore)(nil), "centaurusinfra.io.fornaxcore.service.FornaxCore")
	proto.RegisterType((*FornaxCoreConfiguration)(nil), "centaurusinfra.io.fornaxcore.service.FornaxCoreConfiguration")
	proto.RegisterType((*NodeIdentifier)(nil), "centaurusinfra.io.fornaxcore.service.NodeIdentifier")
	proto.RegisterType((*NodeRegistry)(nil), "centaurusinfra.io.fornaxcore.service.NodeRegistry")
	proto.RegisterType((*NodeConfiguration)(nil), "centaurusinfra.io.fornaxcore.service.NodeConfiguration")
	proto.RegisterType((*NodeReady)(nil), "centaurusinfra.io.fornaxcore.service.NodeReady")
	proto.RegisterType((*NodeState)(nil), "centaurusinfra.io.fornaxcore.service.NodeState")
	proto.RegisterType((*NodeFullSync)(nil), "centaurusinfra.io.fornaxcore.service.NodeFullSync")
	proto.RegisterType((*PodState)(nil), "centaurusinfra.io.fornaxcore.service.PodState")
	proto.RegisterType((*PodResource)(nil), "centaurusinfra.io.fornaxcore.service.PodResource")
	proto.RegisterType((*PodCreate)(nil), "centaurusinfra.io.fornaxcore.service.PodCreate")
	proto.RegisterType((*PodTerminate)(nil), "centaurusinfra.io.fornaxcore.service.PodTerminate")
	proto.RegisterType((*PodHibernate)(nil), "centaurusinfra.io.fornaxcore.service.PodHibernate")
}

func init() {
	proto.RegisterFile("pkg/fornaxcore/grpc/fornaxcore.proto", fileDescriptor_da9351c4a4ab5ec5)
}

var fileDescriptor_da9351c4a4ab5ec5 = []byte{
	// 1010 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x97, 0xdf, 0x6e, 0xe3, 0xc4,
	0x17, 0xc7, 0x6b, 0x77, 0xf7, 0xb7, 0xcd, 0x49, 0x9b, 0xba, 0xb3, 0x3f, 0x51, 0x53, 0x60, 0x55,
	0x59, 0xbd, 0xa8, 0x90, 0x70, 0xba, 0xa5, 0x52, 0x85, 0xb4, 0x08, 0xda, 0xc4, 0xd9, 0x66, 0xd5,
	0xfc, 0x61, 0x92, 0x4a, 0x14, 0x81, 0x2a, 0xd7, 0x9e, 0x04, 0x8b, 0xc4, 0x63, 0x8d, 0xed, 0x8a,
	0x5c, 0xf0, 0x10, 0xbc, 0xc7, 0xfe, 0xb9, 0xe0, 0x25, 0xf6, 0x1f, 0x2f, 0x02, 0x57, 0xbc, 0x01,
	0x9a, 0x19, 0xdb, 0x71, 0xda, 0xae, 0x64, 0xf7, 0x8a, 0xbb, 0xcc, 0x99, 0x39, 0x9f, 0xf3, 0x9d,
	0xb1, 0xcf, 0x37, 0x63, 0xd8, 0x09, 0x7e, 0x19, 0xd7, 0x47, 0x94, 0xf9, 0xf6, 0xaf, 0x0e, 0x65,
	0xa4, 0x3e, 0x66, 0x81, 0x93, 0x1b, 0x9b, 0x01, 0xa3, 0x11, 0x45, 0x3b, 0x0e, 0xf1, 0x23, 0x3b,
	0x66, 0x71, 0xe8, 0xf9, 0x23, 0x66, 0x9b, 0x1e, 0x35, 0x73, 0x6b, 0x42, 0xc2, 0xae, 0x3c, 0x87,
	0x6c, 0x7d, 0x32, 0xa6, 0x74, 0x3c, 0x21, 0x75, 0x91, 0x73, 0x19, 0x8f, 0xea, 0x64, 0x1a, 0x44,
	0x33, 0x89, 0x30, 0xfe, 0x5e, 0x81, 0x8d, 0x96, 0xc8, 0x69, 0x50, 0x46, 0x3a, 0x24, 0x0c, 0xed,
	0x31, 0x41, 0x3f, 0x42, 0xcd, 0xa7, 0x2e, 0x69, 0xbb, 0xc4, 0x8f, 0xbc, 0x91, 0x47, 0x98, 0xae,
	0x6c, 0x2b, 0xbb, 0xd5, 0xfd, 0x03, 0xb3, 0x48, 0x45, 0xb3, 0xbb, 0x90, 0x8b, 0xaf, 0xb1, 0xd0,
	0x00, 0xaa, 0x53, 0x59, 0x68, 0x38, 0x0b, 0x88, 0xae, 0x6e, 0x2b, 0xbb, 0xb5, 0xfd, 0xc7, 0xc5,
	0xd0, 0x9d, 0x79, 0x22, 0xce, 0x53, 0xd0, 0x0c, 0x36, 0x47, 0xd9, 0x3e, 0x1a, 0xd4, 0x1f, 0x79,
	0xe3, 0x98, 0xd9, 0x91, 0x47, 0x7d, 0xdd, 0x15, 0xda, 0xbf, 0x2e, 0x56, 0xa0, 0x75, 0x3b, 0xe4,
	0x64, 0x09, 0x7f, 0x88, 0x8f, 0x7e, 0x86, 0x0d, 0xbe, 0xc3, 0xc5, 0xa2, 0xaf, 0xe5, 0x89, 0x1d,
	0x16, 0x3f, 0xb1, 0xeb, 0xf5, 0x6e, 0x42, 0xd1, 0x39, 0xac, 0xf2, 0x20, 0x26, 0x63, 0x2f, 0x8c,
	0xd8, 0x4c, 0x7f, 0x23, 0x8b, 0xec, 0x17, 0x2f, 0x92, 0xa6, 0x9e, 0x2c, 0xe1, 0x05, 0x14, 0xea,
	0x43, 0x45, 0x8e, 0x6d, 0x77, 0xa6, 0xbf, 0x95, 0xdc, 0x7a, 0x19, 0xae, 0xed, 0x72, 0xe8, 0x1c,
	0x92, 0x12, 0x07, 0x91, 0x1d, 0x11, 0xfd, 0x5d, 0x69, 0xa2, 0xc8, 0x4b, 0x89, 0x62, 0x90, 0x6e,
	0xbf, 0x15, 0x4f, 0x26, 0x83, 0x99, 0xef, 0xe8, 0xef, 0x4b, 0x6f, 0x3f, 0x4d, 0x4d, 0xb7, 0x9f,
	0x8e, 0xb9, 0xd8, 0x80, 0xba, 0x0d, 0x46, 0xb8, 0xd8, 0xe7, 0x6a, 0x19, 0xb1, 0xfd, 0x34, 0x8f,
	0x8b, 0xcd, 0x20, 0x5c, 0x6c, 0x40, 0xdd, 0x21, 0x61, 0x53, 0xcf, 0xe7, 0xd0, 0x17, 0x6a, 0x19,
	0xb1, 0xfd, 0x5c, 0x2a, 0x17, 0x9b, 0x47, 0x25, 0xe8, 0x13, 0xef, 0x92, 0x30, 0x81, 0x7e, 0x59,
	0x16, 0x9d, 0xa5, 0x26, 0xe8, 0x6c, 0x8c, 0x3a, 0xb0, 0x12, 0x50, 0x57, 0x3e, 0xb3, 0x57, 0x12,
	0x6b, 0x16, 0xc6, 0xa6, 0x8f, 0x2c, 0x43, 0x1c, 0xaf, 0x41, 0x35, 0xe9, 0xd8, 0x63, 0xea, 0xce,
	0x8c, 0x27, 0x00, 0xf3, 0xfe, 0x42, 0x35, 0x50, 0xbd, 0x40, 0x38, 0x4b, 0x05, 0xab, 0x5e, 0x80,
	0x1e, 0x01, 0x78, 0x73, 0xc7, 0x51, 0x45, 0x3c, 0x17, 0x31, 0xfe, 0x50, 0x60, 0xf3, 0x03, 0xed,
	0x89, 0x9e, 0xc1, 0x83, 0x80, 0x79, 0x53, 0x9b, 0xcd, 0x12, 0xab, 0xda, 0x2b, 0xdb, 0xee, 0x38,
	0x05, 0xa0, 0x53, 0x58, 0x09, 0x23, 0xdb, 0x77, 0x2f, 0x67, 0xa1, 0xae, 0x6e, 0x2f, 0xdf, 0x09,
	0x96, 0x11, 0x8c, 0x6f, 0xa1, 0xb6, 0xe8, 0x87, 0xa5, 0xf7, 0xdd, 0x82, 0xd5, 0x7c, 0xeb, 0x22,
	0x23, 0x75, 0x81, 0x2b, 0x2f, 0xe4, 0x56, 0xc3, 0x49, 0xcb, 0x78, 0x21, 0x86, 0x10, 0xdc, 0xe3,
	0xe3, 0x84, 0x26, 0x7e, 0x1b, 0x1d, 0xd8, 0xb8, 0xe1, 0x33, 0x68, 0x07, 0xd6, 0x9c, 0x49, 0x1c,
	0x46, 0x84, 0x35, 0xe9, 0xd4, 0xf6, 0xfc, 0x44, 0xd7, 0x62, 0xf0, 0x56, 0xdc, 0xef, 0x0a, 0x54,
	0xb2, 0xd6, 0xbf, 0xab, 0x28, 0x74, 0x2a, 0x1a, 0x4f, 0xbc, 0x2d, 0xa1, 0xbe, 0x2c, 0x4e, 0xbb,
	0xe4, 0x0b, 0x87, 0xe7, 0x80, 0x4c, 0x93, 0xf4, 0x8b, 0xff, 0x86, 0xa6, 0x9a, 0x7c, 0x7c, 0xa9,
	0xd5, 0x18, 0x7f, 0xaa, 0xb0, 0x92, 0xae, 0x2b, 0x24, 0xf1, 0x19, 0xdc, 0x0f, 0x45, 0x43, 0xca,
	0x7f, 0xca, 0x83, 0x72, 0x52, 0x4c, 0x29, 0x48, 0x22, 0x90, 0x06, 0xcb, 0x01, 0x75, 0xf5, 0x65,
	0xb1, 0x5b, 0xfe, 0x93, 0x77, 0x3c, 0x23, 0x21, 0x8d, 0x99, 0x43, 0xf4, 0x7b, 0xa2, 0x75, 0x1e,
	0x17, 0x2e, 0x80, 0x93, 0x44, 0x9c, 0x21, 0x8c, 0x00, 0xee, 0xcb, 0x9d, 0xad, 0xc2, 0x8a, 0x70,
	0x42, 0xcf, 0x1f, 0x6b, 0x4b, 0xa8, 0x0a, 0x0f, 0x06, 0xb2, 0x23, 0x34, 0x40, 0x35, 0x80, 0x23,
	0x27, 0xf2, 0xae, 0xe4, 0xe4, 0xff, 0xf9, 0x24, 0x8e, 0x7d, 0x9f, 0x0f, 0x1e, 0xf1, 0x49, 0xeb,
	0xca, 0x76, 0x62, 0x39, 0xb9, 0x8b, 0xd6, 0xa1, 0x9a, 0x3a, 0x1f, 0x0f, 0xec, 0xf3, 0x05, 0x99,
	0x15, 0xba, 0xda, 0x13, 0xe3, 0x1b, 0xa8, 0xe6, 0xa4, 0xa0, 0x3d, 0x78, 0x98, 0x8a, 0xf9, 0x2e,
	0xa6, 0x91, 0xcd, 0xd5, 0xc4, 0x61, 0xf2, 0x5a, 0xdf, 0x36, 0x65, 0xd8, 0x50, 0xc9, 0x3c, 0x9c,
	0xf7, 0x43, 0x40, 0xdd, 0x6b, 0x37, 0x9f, 0x0a, 0x5e, 0x0c, 0xa6, 0xc7, 0xa8, 0xce, 0x8f, 0xf1,
	0x53, 0xa8, 0x38, 0xa2, 0xb1, 0x3a, 0x76, 0x90, 0x1c, 0xef, 0x3c, 0x60, 0x1c, 0xc0, 0x6a, 0xde,
	0xd1, 0x8b, 0x55, 0x49, 0xb2, 0xe6, 0xe6, 0x5c, 0x28, 0xeb, 0xf3, 0xbf, 0x94, 0xcc, 0x74, 0xc5,
	0xcd, 0x68, 0x1d, 0xaa, 0x67, 0xdd, 0x41, 0xdf, 0x6a, 0xb4, 0x5b, 0x6d, 0xab, 0xa9, 0x2d, 0xa1,
	0xcf, 0xe0, 0xe3, 0x56, 0x0f, 0x77, 0x8f, 0xbe, 0xbf, 0x68, 0xf4, 0xb0, 0x75, 0xd1, 0xe8, 0x75,
	0x5b, 0xed, 0xa7, 0x67, 0xf8, 0x68, 0xd8, 0xee, 0x75, 0x35, 0x17, 0x6d, 0x02, 0xea, 0xf6, 0x9a,
	0xd7, 0xe3, 0xaf, 0x15, 0x84, 0x60, 0x4d, 0x4c, 0x60, 0xeb, 0x69, 0x7b, 0x30, 0xb4, 0xb0, 0xf6,
	0x46, 0x41, 0xeb, 0x00, 0x49, 0xec, 0xa8, 0x79, 0xae, 0xbd, 0x9d, 0x07, 0x06, 0xc3, 0xa3, 0xa1,
	0xa5, 0xbd, 0x53, 0xd0, 0x43, 0xa8, 0x89, 0x40, 0xeb, 0xec, 0xf4, 0xf4, 0x62, 0x70, 0xde, 0x6d,
	0x68, 0xef, 0xc5, 0xaa, 0x7e, 0xaf, 0x79, 0xd1, 0xc0, 0x16, 0x5f, 0xf5, 0x5c, 0xe5, 0x6c, 0x1e,
	0x18, 0x5a, 0xb8, 0xd3, 0xee, 0xf2, 0xd8, 0x8b, 0x2c, 0x76, 0xd2, 0x3e, 0xb6, 0xb0, 0x88, 0xbd,
	0x54, 0x51, 0x0d, 0x2a, 0x3c, 0x26, 0xe9, 0xaf, 0xd4, 0xfd, 0x7f, 0x94, 0xfc, 0xfd, 0x75, 0x20,
	0x5f, 0x4d, 0xf4, 0x1b, 0xc0, 0x98, 0x44, 0xe9, 0x6d, 0xf6, 0x4e, 0xb7, 0xd6, 0xad, 0xc3, 0xb2,
	0x9e, 0x9f, 0x94, 0xdb, 0x53, 0xd0, 0x4f, 0x00, 0x41, 0x9c, 0x95, 0xbf, 0x2b, 0x68, 0xeb, 0x23,
	0x53, 0xde, 0xdc, 0xcd, 0xf4, 0xe6, 0x6e, 0x5a, 0xfc, 0xe6, 0x7e, 0xfc, 0xd5, 0x0f, 0x87, 0x37,
	0x88, 0xc9, 0xc7, 0xc1, 0x17, 0x9c, 0x46, 0xd8, 0x84, 0x84, 0x61, 0xfd, 0x96, 0x4f, 0x88, 0xcb,
	0xff, 0x09, 0xd4, 0x97, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x75, 0x0c, 0x5f, 0x6e, 0x60, 0x0c,
	0x00, 0x00,
}
